{
    "compilerOptions": {
        // "outDir": "./build",
        // "rootDir": "./src",
        // "target": "es2015",
        "target": "es6",
        "baseUrl": "./packages",
        "paths": {
            // "@geo-ball/*": [
            //     "./*/src"
            // ]
        },
        "composite": true,
        "moduleResolution": "node",
        "module": "commonjs",
        "declaration": true,
        "declarationMap": true,
        "jsx": "react",

        /* inlineSourceMap [false] - Emit a single file with source maps instead of having a separate file.*/
        "inlineSourceMap": false,

        /* inlineSources [false] - Emit the source alongside the sourcemaps within a single file;
         *                         requires --inlineSourceMap or --sourceMap to be set.*/
        "inlineSources": false,

        /* sourceMap [false] - Generates corresponding .map file. */
        "sourceMap": true,

        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
        "strict": true /* Enable all strict type-checking options. */,
        "experimentalDecorators": true,
        /* Strict Type-Checking Options */
        // "noImplicitAny": true /* Raise error on expressions and declarations with an implied 'any' type. */,
        // "strictNullChecks": true /* Enable strict null checks. */,
        // "strictFunctionTypes": true /* Enable strict checking of function types. */,
        // "strictPropertyInitialization": true /* Enable strict checking of property initialization in classes. */,
        // "noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type. */,
        // "alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,
        /* Additional Checks */
        // "noUnusedLocals": true /* Report errors on unused locals. */,
        "noUnusedLocals": false,
        "noUnusedParameters": true /* Report errors on unused parameters. */,
        "noImplicitReturns": true /* Report error when not all code paths in function return a value. */,
        "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,

        /* Debugging Options */
        "resolveJsonModule": true,
        "traceResolution": false /* Report module resolution log messages. */,
        "listEmittedFiles": false /* Print names of generated files part of the compilation. */,
        "listFiles": false /* Print names of files part of the compilation. */,
        "pretty": true /* Stylize errors and messages using color and context. */,
        /* Experimental Options */
        // "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
        // "emitDecoratorMetadata": true /* Enables experimental support for emitting type metadata for decorators. */,
        "lib": ["es6", "es2015", "es2018", "es2018.promise", "dom"],
        "typeRoots": ["./node_modules/@types", "./ext-stub-types", "../../ext-stub-types"]
        // "types":[
        //     ""
        // ]
    },
    // , "../../ext-stub-types"
    "include": ["./src", "./ext-stub-types"],
    "exclude": ["node_modules/**"],
    "compileOnSave": true
}
// {
//     "extends": "./tsconfig.compiler.json",
//     "compilerOptions": {
//       "baseUrl": "./packages",
//       "paths": {
//         "@geo-ball/*": ["./*/src"]
//       }
//     }
//   }
