"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const ava_1 = __importDefault(require("ava"));
const SudokuTestData_1 = require("../test/SudokuTestData");
const array_1 = require("../utils/array");
const norvig = SudokuTestData_1.getBoards().norvig;
ava_1.default('internal test for getting sudoku squares dynamically', t => {
    const DIGITS = [];
    const COLS = [];
    const ROWS = [];
    const SIZE = 9;
    const BOX_COLS = Math.sqrt(SIZE);
    const A = 'A'.charCodeAt(0);
    for (let i = 0; i < SIZE; i++) {
        DIGITS.push(i + 1);
        COLS.push(i + 1);
        ROWS.push(String.fromCharCode((A + i)));
    }
    const getBox = (boxNum) => {
        const rowStart = (Math.floor(boxNum / BOX_COLS) * BOX_COLS);
        const colStart = (boxNum * BOX_COLS) % SIZE;
        const r = ROWS.slice(rowStart, rowStart + BOX_COLS);
        const c = COLS.slice(colStart, colStart + BOX_COLS);
        return array_1.cross(r, c);
    };
    const listOfUnits = [];
    for (let i = 0; i < SIZE; i++) {
        listOfUnits.push(getBox(i));
    }
    const expectedUnits = [
        ["A1", "A2", "A3", "B1", "B2", "B3", "C1", "C2", "C3"],
        ["A4", "A5", "A6", "B4", "B5", "B6", "C4", "C5", "C6"],
        ["A7", "A8", "A9", "B7", "B8", "B9", "C7", "C8", "C9"],
        ["D1", "D2", "D3", "E1", "E2", "E3", "F1", "F2", "F3"],
        ["D4", "D5", "D6", "E4", "E5", "E6", "F4", "F5", "F6"],
        ["D7", "D8", "D9", "E7", "E8", "E9", "F7", "F8", "F9"],
        ["G1", "G2", "G3", "H1", "H2", "H3", "I1", "I2", "I3"],
        ["G4", "G5", "G6", "H4", "H5", "H6", "I4", "I5", "I6"],
        ["G7", "G8", "G9", "H7", "H8", "H9", "I7", "I8", "I9"]
    ];
    // const expectedUnits = [
    //     ["A1", "A2", "B1", "B2"],
    //     ["A3", "A4", "B3", "B4"],
    //     ["C1", "C2", "D1", "D2"],
    //     ["C3", "C4", "D3", "D4"],
    // ];
    // console.log('expectedUnits:\n', JSON.stringify(expectedUnits, undefined, 4));
    // console.log('listOfUnits:\n', JSON.stringify(listOfUnits, undefined, 4));
    t.deepEqual(listOfUnits, expectedUnits);
});
// test.only('SudokuBoard', t => {
//     const BOARDS = getBoards().fourByFour;
//     const sb = SudokuBoard.CreateFromString(BOARDS.beg.pretty);
//     t.log('sb.toPrettyString()');
//     t.log(sb.toPrettyString());
//     t.log('BOARDS.beg.pretty');
//     t.log(BOARDS.beg.pretty);
//     // t.deepEqual(sb, expected, 'message');
// });
// test('SudokuBoard returns same board array as created with', t => {
//     const easyInitial = norvig.easyOne.beg;
//     const easySolution = norvig.easyOne.end;
//     const p = new SudokuBoard(SudokuBoard.StringToArray(easyInitial));
//     const a = p.toArray();
//     console.log(p.toString());
//     t.deepEqual(a, easySolution);
// });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU3Vkb2t1Qm9hcmQuc3BlYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zdWRva3UvU3Vkb2t1Qm9hcmQuc3BlYy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUNBLDhDQUF1QjtBQUN2QiwyREFBbUQ7QUFDbkQsMENBQXVDO0FBQ3ZDLE1BQU0sTUFBTSxHQUFHLDBCQUFTLEVBQUUsQ0FBQyxNQUFNLENBQUM7QUFHbEMsYUFBSSxDQUFDLHNEQUFzRCxFQUFFLENBQUMsQ0FBQyxFQUFFO0lBQzdELE1BQU0sTUFBTSxHQUFrQixFQUFFLENBQUM7SUFDakMsTUFBTSxJQUFJLEdBQWtCLEVBQUUsQ0FBQztJQUMvQixNQUFNLElBQUksR0FBa0IsRUFBRSxDQUFDO0lBQy9CLE1BQU0sSUFBSSxHQUFHLENBQUMsQ0FBQztJQUNmLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDakMsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM1QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsSUFBSSxFQUFFLENBQUMsRUFBRSxFQUFFO1FBQzNCLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ25CLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2pCLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7S0FDM0M7SUFFRCxNQUFNLE1BQU0sR0FBRyxDQUFDLE1BQWMsRUFBaUIsRUFBRTtRQUM3QyxNQUFNLFFBQVEsR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxDQUFDO1FBQzVELE1BQU0sUUFBUSxHQUFHLENBQUMsTUFBTSxHQUFHLFFBQVEsQ0FBQyxHQUFHLElBQUksQ0FBQztRQUM1QyxNQUFNLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxRQUFRLEdBQUcsUUFBUSxDQUFDLENBQUM7UUFDcEQsTUFBTSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsUUFBUSxHQUFHLFFBQVEsQ0FBQyxDQUFDO1FBQ3BELE9BQU8sYUFBSyxDQUFDLENBQUMsRUFBQyxDQUFDLENBQUMsQ0FBQztJQUN0QixDQUFDLENBQUE7SUFFRCxNQUFNLFdBQVcsR0FBeUIsRUFBRSxDQUFDO0lBRTdDLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDM0IsV0FBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQTtLQUM5QjtJQUNELE1BQU0sYUFBYSxHQUFHO1FBQ2xCLENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUM7UUFDdEQsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQztRQUN0RCxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDO1FBQ3RELENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUM7UUFDdEQsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQztRQUN0RCxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDO1FBQ3RELENBQUMsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLENBQUM7UUFDdEQsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQztRQUN0RCxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsSUFBSSxDQUFDO0tBQ3pELENBQUM7SUFDRiwwQkFBMEI7SUFDMUIsZ0NBQWdDO0lBQ2hDLGdDQUFnQztJQUNoQyxnQ0FBZ0M7SUFDaEMsZ0NBQWdDO0lBQ2hDLEtBQUs7SUFDTCxnRkFBZ0Y7SUFDaEYsNEVBQTRFO0lBQzVFLENBQUMsQ0FBQyxTQUFTLENBQUMsV0FBVyxFQUFFLGFBQWEsQ0FBQyxDQUFDO0FBQzVDLENBQUMsQ0FBQyxDQUFDO0FBRUgsa0NBQWtDO0FBQ2xDLDZDQUE2QztBQUU3QyxrRUFBa0U7QUFDbEUsb0NBQW9DO0FBQ3BDLGtDQUFrQztBQUVsQyxrQ0FBa0M7QUFDbEMsZ0NBQWdDO0FBRWhDLCtDQUErQztBQUMvQyxNQUFNO0FBSU4sc0VBQXNFO0FBQ3RFLDhDQUE4QztBQUM5QywrQ0FBK0M7QUFDL0MseUVBQXlFO0FBQ3pFLDZCQUE2QjtBQUM3QixpQ0FBaUM7QUFDakMsb0NBQW9DO0FBQ3BDLE1BQU0ifQ==